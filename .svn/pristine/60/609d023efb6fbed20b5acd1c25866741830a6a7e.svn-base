/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.jeeplus.modules.project.service;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeeplus.common.persistence.Page;
import com.jeeplus.common.service.CrudService;
import com.jeeplus.modules.entity.YsCourse;
import com.jeeplus.modules.entity.YsEvaluate;
import com.jeeplus.modules.entity.YsProject;
import com.jeeplus.modules.entity.YsTest;
import com.jeeplus.modules.project.dao.YsProjectDao;
import com.jeeplus.modules.project.entity.YsCourseUserPojo;

/**
 * 项目管理Service
 * @author wdy
 * @version 2018-05-17
 */
@Service
@Transactional(readOnly = true)
public class YsProjectService extends CrudService<YsProjectDao, YsProject> {
	
	@Autowired
	private YsProjectDao ysProjectDao;

	public YsProject get(String id) {
		return super.get(id);
	}
	
	public List<YsProject> findList(YsProject ysProject) {
		return super.findList(ysProject);
	}
	
	public Page<YsProject> findPage(Page<YsProject> page, YsProject ysProject) {
		return super.findPage(page, ysProject);
	}
	
	@Transactional(readOnly = false)
	public void save(YsProject ysProject) {
		super.save(ysProject);
	}
	
	@Transactional(readOnly = false)
	public void delete(YsProject ysProject) {
		super.delete(ysProject);
	}
	
	/**
	 * 获取项目评价信息
	 */
	@Transactional(readOnly = false)
	public YsEvaluate findeEvaluate(YsEvaluate ysEvaluate) {
		// 获取项目评分 (几颗星)
		List<YsEvaluate> EvaList = ysProjectDao.findEva(ysEvaluate);
		// 获取项目评价信息
		ysEvaluate = ysProjectDao.findEvaluate(ysEvaluate);
		int one = 0, two = 0, three = 0, four = 0, five = 0;
		for (int i = 0; i < EvaList.size(); i++) {
			if(EvaList.get(i).getEvaluate() == 1){
				one++;
			} else if(EvaList.get(i).getEvaluate() == 2){
				two++;
			} else if(EvaList.get(i).getEvaluate() == 3){
				three++;
			} else if(EvaList.get(i).getEvaluate() == 4){
				four++;
			} else if(EvaList.get(i).getEvaluate() == 5){
				five++;
			}
		}
		List<Integer> evaluateList = Arrays.asList(new Integer[]{one, two, three, four, five});
		ysEvaluate.setEvaluateList(evaluateList);
		return ysEvaluate;
	}

	/**
	 * 项目课件关联关系
	 */
	@Transactional(readOnly = false)
	public void saveCourse(Map<Object, Object> map) {
		ysProjectDao.saveCourse(map);
	}
	
	/**
	 * 保存并返回主键
	 */
	@Transactional(readOnly = false)
	public int saveYsPro(YsProject ysProject) {
		return ysProjectDao.saveYsPro(ysProject);
	}


	/**
	 * 项目学员关联关系
	 */
	@Transactional(readOnly = false)
	public void saveUser(Map<Object, Object> map) {
		ysProjectDao.saveUser(map);
	}

	/**
	 * 项目部门关联关系
	 */
	@Transactional(readOnly = false)
	public void saveDep(Map<Object, Object> map) {
		ysProjectDao.saveDep(map);
	}
	
	/**
	 * 根据proId查询课件
	 */
	@Transactional(readOnly = false)
	public Page<YsCourse> findPageCourseByProId(Page<YsCourse> page, YsCourse ysCourse) {
		ysCourse.setPage(page);
		page.setList(ysProjectDao.findPageCourseByProId(ysCourse));
		return page;
	}

	/**
	 * 删除课件与项目的关联关系 及 课件和学员的关联关系
	 */
	@Transactional(readOnly = false)
	public void delCourse(Map<Object, Object> map) {
		ysProjectDao.delCoursePro(map);
		ysProjectDao.delCourseUser(map);
	}

	/**
	 * 删除课件与项目的启禁用状态
	 */
	@Transactional(readOnly = false)
	public void updateCourseState(Map<Object, Object> map) {
		ysProjectDao.updateCourseState(map);
	}

	/**
	 * 根据项目id 课件id 查询用户的培训课件的信息
	 */
	@Transactional(readOnly = false)
	public Page<YsCourseUserPojo> findPageCourseUser(Page<YsCourseUserPojo> page, YsCourseUserPojo ysCourseUserPojo) {
		ysCourseUserPojo.setPage(page);
		page.setList(ysProjectDao.findPageCourseUser(ysCourseUserPojo));
		return page;
	}

	@Transactional(readOnly = false)
	public void delCourseUserById(Map<Object, Object> map) {
		ysProjectDao.delCourseUserById(map);
	}

	public Page<YsTest> findPageYsTestByProId(Page<YsTest> page, YsTest ysTest) {
		ysTest.setPage(page);
		page.setList(ysProjectDao.findPageYsTestByProId(ysTest));
		return page;
	}

	
	
}