/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.jeeplus.modules.project.web;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.jeeplus.common.config.Global;
import com.jeeplus.common.persistence.Page;
import com.jeeplus.common.utils.MyBeanUtils;
import com.jeeplus.common.utils.StringUtils;
import com.jeeplus.common.web.BaseController;
import com.jeeplus.modules.course.service.addcourse.YsCourseService;
import com.jeeplus.modules.entity.YsDepartment;
import com.jeeplus.modules.entity.YsProject;
import com.jeeplus.modules.entity.YsUser;
import com.jeeplus.modules.project.service.YsDepartmentService;
import com.jeeplus.modules.project.service.YsProjectService;
import com.jeeplus.modules.project.service.YsUserService;

/**
 * 项目管理Controller
 * @author wdy
 * @version 2018-05-17
 */
@Controller
@RequestMapping(value = "${adminPath}/project/ysProject")
public class YsProjectController extends BaseController {

	@Autowired
	private YsProjectService ysProjectService;
	
	@Autowired
	private YsDepartmentService ysDepartmentService;
	
	@Autowired
	private YsCourseService ysCourseService;
	
	@Autowired
	private YsUserService ysUserService;
	
	@ModelAttribute
	public YsProject get(@RequestParam(required=false) String id) {
		YsProject entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = ysProjectService.get(id);
		}
		if (entity == null){
			entity = new YsProject();
		}
		return entity;
	}
	
	/**
	 * 项目管理列表页面
	 */
//	@RequiresPermissions("project:ysProject:list")
	@RequestMapping(value = {"list", ""})
	public String list(YsProject ysProject, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<YsProject> page = ysProjectService.findPage(new Page<YsProject>(request, response), ysProject); 
		model.addAttribute("page", page);
		return "modules/project/ysProjectList";
	}

	/**
	 * 查看，增加，编辑项目管理表单页面
	 */
	@RequiresPermissions(value={"project:ysProject:view","project:ysProject:add","project:ysProject:edit"},logical=Logical.OR)
	@RequestMapping(value = "form")
	public String form(YsProject ysProject, Model model) {
		model.addAttribute("ysProject", ysProject);
		return "modules/project/ysProjectForm";
	}

	/**
	 * 保存项目管理
	 */
	@RequiresPermissions(value={"project:ysProject:add","project:ysProject:edit"},logical=Logical.OR)
	@RequestMapping(value = "save")
	public String save(YsProject ysProject, Model model, RedirectAttributes redirectAttributes) throws Exception{
		// 设置属性
		ysProject.setUpdateTime(new Date());
		ysProject.setCreateTime(new Date());
		
		
		if (!beanValidator(model, ysProject)){
			return form(ysProject, model);
		}
		if(!ysProject.getIsNewRecord()){//编辑表单保存
			YsProject t = ysProjectService.get(ysProject.getId());//从数据库取出记录的值
			MyBeanUtils.copyBeanNotNull2Bean(ysProject, t);//将编辑表单中的非NULL值覆盖数据库记录中的值
			ysProjectService.save(t);//保存
		}else{//新增表单保存
			ysProjectService.save(ysProject);//保存
		}
		addMessage(redirectAttributes, "保存项目管理成功");
		return "redirect:"+Global.getAdminPath()+"/project/ysProject/form";
	}
	
	/**
	 * 删除项目管理
	 */
//	@RequiresPermissions("project:ysProject:del")
	@RequestMapping(value = "delete")
	public String delete(YsProject ysProject, RedirectAttributes redirectAttributes) {
		ysProjectService.delete(ysProject);
		addMessage(redirectAttributes, "删除项目管理成功");
		return "redirect:"+Global.getAdminPath()+"/project/ysProject/?repage";
	}
	
	/**
	 * 批量删除项目管理
	 */
//	@RequiresPermissions("project:ysProject:del")
	@RequestMapping(value = "deleteAll")
	public String deleteAll(String ids, RedirectAttributes redirectAttributes) {
		String idArray[] =ids.split(",");
		for(String id : idArray){
			ysProjectService.delete(ysProjectService.get(id));
		}
		addMessage(redirectAttributes, "删除项目管理成功");
		return "redirect:"+Global.getAdminPath()+"/project/ysProject/?repage";
	}
	
	/**
	 * 获取部门和用户信息
	 */
	@RequestMapping(value = "userList")
	public String userList(YsUser ysUser,YsDepartment ysDepartment, YsProject ysProject, Model model){
		List<YsDepartment> ysDepList = ysDepartmentService.findList(ysDepartment);
		List<YsUser> ysUserList = ysUserService.findList(ysUser);
		model.addAttribute("ysDepList", ysDepList);
		model.addAttribute("ysUserList", ysUserList);
		return "modules/project/ys_userList";
	}

}