/**
 * Copyright &copy; 2015-2020 <a href="http://www.jeeplus.org/">JeePlus</a> All rights reserved.
 */
package com.jeeplus.modules.course.web.addcourse;

import java.sql.Timestamp;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolationException;

import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.google.common.collect.Lists;
import com.jeeplus.common.config.Global;
import com.jeeplus.common.persistence.Page;
import com.jeeplus.common.utils.DateUtils;
import com.jeeplus.common.utils.MyBeanUtils;
import com.jeeplus.common.utils.StringUtils;
import com.jeeplus.common.utils.excel.ExportExcel;
import com.jeeplus.common.utils.excel.ImportExcel;
import com.jeeplus.common.web.BaseController;
import com.jeeplus.modules.course.service.addcourse.YsCourseService;
import com.jeeplus.modules.entity.YsCourse;
import com.jeeplus.modules.entity.YsMajor;
import com.jeeplus.modules.major.dao.majro_ad.YsMajorDao;

/**
 * 课件管理Controller
 * @author hjm
 * @version 2018-05-16
 */
@Controller
@RequestMapping(value = "${adminPath}/course/addcourse/ysCourse")
public class YsCourseController extends BaseController {

	@Autowired
	private YsCourseService ysCourseService;
	@Autowired
	private YsMajorDao ysMajorDao;
	
	
	@ModelAttribute
	public YsCourse get(@RequestParam(required=false) String id) {
		YsCourse entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = ysCourseService.get(id);
		}
		if (entity == null){
			entity = new YsCourse();
		}
		return entity;
	}
	
	/**
	 * 学习资料管理列表页面
	 */
	@RequiresPermissions("course:addcourse:ysCourse:list")
	@RequestMapping(value = {"list", ""})
	public String list(YsCourse ysCourse, HttpServletRequest request, HttpServletResponse response, Model model) {
		
		List<YsMajor> list=ysMajorDao.YsMajorSelectAll();  // 查询专业类型里面的值
		
		Page<YsCourse> page = ysCourseService.findPage(new Page<YsCourse>(request, response), ysCourse); 
		
		model.addAttribute("page", page);
		model.addAttribute("list", list);
		return "modules/course/addcourse/ysCourseList";
	}

	/**
	 * 查看，增加，编辑学习资料管理表单页面
	 */
	@RequiresPermissions(value={"course:addcourse:ysCourse:view","course:addcourse:ysCourse:add","course:addcourse:ysCourse:edit"},logical=Logical.OR)
	@RequestMapping(value = "form")
	public String form(YsCourse ysCourse, Model model) {
		
		List<YsMajor> list=ysMajorDao.YsMajorSelectAll();  // 查询专业类型里面的值
		
		model.addAttribute("list", list);
		model.addAttribute("ysCourse", ysCourse);
		return "modules/course/addcourse/ysCourseForm";
	}

	/**
	 * 保存学习资料管理
	 */
	@RequiresPermissions(value={"course:addcourse:ysCourse:add","course:addcourse:ysCourse:edit"},logical=Logical.OR)
	@RequestMapping(value = "save")
	public String save(YsCourse ysCourse, Model model, RedirectAttributes redirectAttributes) throws Exception{
		java.util.Date date = new java.util.Date();          // 获取一个Date对象
        Timestamp timeStamp = new Timestamp(date.getTime());
        ysCourse.setUpdateTime(timeStamp);    // 修改时间，每一次编辑课件的时候都要插入新的修改时间

		
		if (!beanValidator(model, ysCourse)){
			return form(ysCourse, model);
		}
		if(!ysCourse.getIsNewRecord()){//编辑表单保存
			YsCourse t = ysCourseService.get(ysCourse.getId());//从数据库取出记录的值
			MyBeanUtils.copyBeanNotNull2Bean(ysCourse, t);//将编辑表单中的非NULL值覆盖数据库记录中的值
			
			String s = t.getAddress(); // 更改文件的路径问题
			String s1 = s.substring(1);
			t.setAddress("http://192.168.10.138:8080"+s1);
			System.out.println(t.toString());
			ysCourseService.save(t);//保存
		}else{//新增表单保存
			ysCourseService.save(ysCourse);//保存
		}
		addMessage(redirectAttributes, "保存学习资料管理成功");
		return "redirect:"+Global.getAdminPath()+"/course/addcourse/ysCourse/?repage";
	}
	
	/**
	 * 删除学习资料管理
	 */
	@RequiresPermissions("course:addcourse:ysCourse:del")
	@RequestMapping(value = "delete")
	public String delete(YsCourse ysCourse, RedirectAttributes redirectAttributes) {
		ysCourseService.delete(ysCourse);
		addMessage(redirectAttributes, "删除学习资料管理成功");
		return "redirect:"+Global.getAdminPath()+"/course/addcourse/ysCourse/?repage";
	}
	
	/**
	 * 批量删除学习资料管理
	 */
	@RequiresPermissions("course:addcourse:ysCourse:del")
	@RequestMapping(value = "deleteAll")
	public String deleteAll(String ids, RedirectAttributes redirectAttributes) {
		String idArray[] =ids.split(",");
		for(String id : idArray){
			ysCourseService.delete(ysCourseService.get(id));
		}
		addMessage(redirectAttributes, "删除学习资料管理成功");
		return "redirect:"+Global.getAdminPath()+"/course/addcourse/ysCourse/?repage";
	}
	
	/**
	 * 根据项目id查询关联课件
	 */
	@RequestMapping(value = {"courseListByProId"})
	public String courseListByProId(YsCourse ysCourse, HttpServletRequest request, HttpServletResponse response, Model model) {
		
		List<YsMajor> list=ysMajorDao.YsMajorSelectAll();  
		
		Page<YsCourse> page = ysCourseService.findPageByProId(new Page<YsCourse>(request, response), ysCourse); 
		
		model.addAttribute("page", page);
		model.addAttribute("list", list);
		return "modules/course/addcourse/ysCourseList";
	}
	
	
	/**
	 * 导出excel文件
	 */
	@RequiresPermissions("course:addcourse:ysCourse:export")
    @RequestMapping(value = "export", method=RequestMethod.POST)
    public String exportFile(YsCourse ysCourse, HttpServletRequest request, HttpServletResponse response, RedirectAttributes redirectAttributes) {
		try {
            String fileName = "学习资料管理"+DateUtils.getDate("yyyyMMddHHmmss")+".xlsx";
            Page<YsCourse> page = ysCourseService.findPage(new Page<YsCourse>(request, response, -1), ysCourse);
    		new ExportExcel("学习资料管理", YsCourse.class).setDataList(page.getList()).write(response, fileName).dispose();
    		return null;
		} catch (Exception e) {
			addMessage(redirectAttributes, "导出学习资料管理记录失败！失败信息："+e.getMessage());
		}
		return "redirect:"+Global.getAdminPath()+"/course/addcourse/ysCourse/?repage";
    }

	/**
	 * 导入Excel数据

	 */
	@RequiresPermissions("course:addcourse:ysCourse:import")
    @RequestMapping(value = "import", method=RequestMethod.POST)
    public String importFile(MultipartFile file, RedirectAttributes redirectAttributes) {
		try {
			int successNum = 0;
			int failureNum = 0;
			StringBuilder failureMsg = new StringBuilder();
			ImportExcel ei = new ImportExcel(file, 1, 0);
			List<YsCourse> list = ei.getDataList(YsCourse.class);
			for (YsCourse ysCourse : list){
				try{
					ysCourseService.save(ysCourse);
					successNum++;
				}catch(ConstraintViolationException ex){
					failureNum++;
				}catch (Exception ex) {
					failureNum++;
				}
			}
			if (failureNum>0){
				failureMsg.insert(0, "，失败 "+failureNum+" 条学习资料管理记录。");
			}
			addMessage(redirectAttributes, "已成功导入 "+successNum+" 条学习资料管理记录"+failureMsg);
		} catch (Exception e) {
			addMessage(redirectAttributes, "导入学习资料管理失败！失败信息："+e.getMessage());
		}
		return "redirect:"+Global.getAdminPath()+"/course/addcourse/ysCourse/?repage";
    }
	
	/**
	 * 下载导入学习资料管理数据模板
	 */
	@RequiresPermissions("course:addcourse:ysCourse:import")
    @RequestMapping(value = "import/template")
    public String importFileTemplate(HttpServletResponse response, RedirectAttributes redirectAttributes) {
		try {
            String fileName = "学习资料管理数据导入模板.xlsx";
    		List<YsCourse> list = Lists.newArrayList(); 
    		new ExportExcel("学习资料管理数据", YsCourse.class, 1).setDataList(list).write(response, fileName).dispose();
    		return null;
		} catch (Exception e) {
			addMessage(redirectAttributes, "导入模板下载失败！失败信息："+e.getMessage());
		}
		return "redirect:"+Global.getAdminPath()+"/course/addcourse/ysCourse/?repage";
    }
	
	
	

}