<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.questions.dao.questions_add.YsQuestionsAddDao">
    
	<sql id="ysQuestionsColumns">
		a.id AS "id",
		a.question_type AS "questionType",
		a.level AS "level",
		a.question_class AS "questionClass",
		a.question_state AS "questionState",
		a.ispath AS "ispath",
		a.dep_id AS "depId",
		a.major_type AS "majorType",
		a.update_time AS "updateTime",
		a.create_id AS "createId",
		a.rule_one AS "ruleOne",
		a.rule_two AS "ruleTwo",
		a.rule_three AS "ruleThree",
		a.describes AS "describes",
		a.answer AS "answer",
		a.options AS "options",
		a.analysis AS "analysis"
	</sql>
	
	<sql id="ysQuestionsJoins">
	</sql>
	
    
	<select id="get" resultType="YsQuestions" >
		SELECT 
			<include refid="ysQuestionsColumns"/>
		FROM ys_questions a
		<include refid="ysQuestionsJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="selectYsQuestionsCount" resultType="Integer">
	select count(*) from
		ys_questions
		<where>
		<if test="depId != null and depId != ''">
		      and dep_id=#{depId}
			</if>
			<if test="majorType != null and majorType != ''">
		      and major_type=#{majorType}
			</if>
		</where>
	</select>
	<select id="selectRanPaper" resultType="YsQuestions">
	select <include refid="ysQuestionsColumns"/> from
		ys_questions a where id=#{id}
	</select>
	<select id="RandYsYsQuestionsDan" resultType="YsQuestions">
SELECT * FROM `ys_questions` 

<where>
 id >= (SELECT floor( RAND() * ((SELECT MAX(id) FROM `ys_questions`)-(SELECT MIN(id) FROM `ys_questions`)) + (SELECT MIN(id) FROM `ys_questions`)))  
	<if test="depId != null and depId != ''">
		      and dep_id=#{depId}
			</if>
			<if test="majorType != null and majorType != ''">
		      and major_type=#{majorType}
			</if>
			LIMIT 50
</where>
 
	</select>
	<select id="RandYsYsQuestionsDuo" resultType="YsQuestions" >
SELECT * FROM `ys_questions` 
WHERE id >= (SELECT floor( RAND() * ((SELECT MAX(id) FROM `ys_questions`)-(SELECT MIN(id) FROM `ys_questions`)) + (SELECT MIN(id) FROM `ys_questions`)))  and question_type=2
LIMIT 10
	</select>
	
	<select id="findList" resultType="YsQuestions" >
		SELECT 
			<include refid="ysQuestionsColumns"/>
		FROM ys_questions a
		<include refid="ysQuestionsJoins"/>
		<where>
			
			<if test="questionType != null and questionType != ''">
				AND a.question_type = #{questionType}
			</if>
			<if test="level != null and level != ''">
				AND a.level = #{level}
			</if>
			<if test="questionClass != null and questionClass != ''">
				AND a.question_class = #{questionClass}
			</if>
			<if test="questionState != null and questionState != ''">
				AND a.question_state = #{questionState}
			</if>
			<if test="ispath != null and ispath != ''">
				AND a.ispath = #{ispath}
			</if>
			<if test="depId != null and depId != ''">
				AND a.dep_id = #{depId}
			</if>
			<if test="majorType != null and majorType != ''">
				AND a.major_type = #{majorType}
			</if>
			<if test="createId != null and createId != ''">
				AND a.create_id = #{createId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="YsQuestions" >
		SELECT 
			<include refid="ysQuestionsColumns"/>
		FROM ys_questions a
		<include refid="ysQuestionsJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ys_questions(
<!-- 			id, -->
			question_type,
			level,
			question_class,
			question_state,
			ispath,
			dep_id,
			major_type,
			update_time,
			create_id,
			rule_one,
			rule_two,
			rule_three,
			describes,
			answer,
			options,
			analysis
		) VALUES (
<!-- 			#{id}, -->
			#{questionType},
			#{level},
			#{questionClass},
			#{questionState},
			#{ispath},
			#{depId},
			#{majorType},
			#{updateTime},
			#{createId},
			#{ruleOne},
			#{ruleTwo},
			#{ruleThree},
			#{describes},
			#{answer},
			#{options},
			#{analysis}
		)
	</insert>
	
	<update id="update">
		UPDATE ys_questions SET 	
			question_type = #{questionType},
			level = #{level},
			question_class = #{questionClass},
			question_state = #{questionState},
			ispath = #{ispath},
			dep_id = #{depId},
			major_type = #{majorType},
			update_time = #{updateTime},
			create_id = #{createId},
			rule_one = #{ruleOne},
			rule_two = #{ruleTwo},
			rule_three = #{ruleThree},
			describes = #{describes},
			answer = #{answer},
			options = #{options},
			analysis = #{analysis}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM ys_questions
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE ys_questions SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="YsQuestions" statementType="STATEMENT">
		select * FROM ys_questions  where ${propertyName} = '${value}'
	</select>
	
</mapper>